package dbp.server;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.htmlunit.HtmlUnitDriver;
import com.gargoylesoftware.htmlunit.WebClient;
import com.gargoylesoftware.htmlunit.WebWindowEvent;
import com.gargoylesoftware.htmlunit.WebWindowListener;

public class DownloadExportFile {

  private String user;
  private String password;
  private String exportFileLocation;

  public DownloadExportFile(String user, String password, String exportFileLocation) {
    super();
    this.user = user;
    this.password = password;
    this.exportFileLocation = exportFileLocation;
  }

  public boolean downloadExportFile() {
    Logger logger = Logger.getLogger("");
    logger.setLevel(Level.SEVERE);

    File exportFile = new File(exportFileLocation);
    if(exportFile.exists() && !exportFile.delete()) {
      logger.log(Level.SEVERE, "Please close " + exportFileLocation + ".");
      System.exit(-1);
    }
    else if(exportFile.exists()) {
      exportFile.delete();
    }

    WebDriver driver = new HtmlUnitDriver() {
      @Override
      protected WebClient modifyWebClient(WebClient client) {
        client.addWebWindowListener(new WebWindowListener() {

          @Override
          public void webWindowOpened(WebWindowEvent event) {

          }

          @Override
          public void webWindowContentChanged(WebWindowEvent event) {
            try {
              InputStream xls = event.getWebWindow().getEnclosedPage().getWebResponse().getContentAsStream();
              OutputStream outputStream = new FileOutputStream(exportFileLocation);

              int read = 0;
              byte[] bytes = new byte[1024];

              while((read = xls.read(bytes)) != -1) {
                outputStream.write(bytes, 0, read);
              }

              xls.close();
              outputStream.flush();
              outputStream.close();
            }
            catch(IOException e) {
              e.printStackTrace();
            }
          }

          @Override
          public void webWindowClosed(WebWindowEvent event) {

          }
        });
        return super.modifyWebClient(client);
      }
    };
    driver.get("http://daily.basketballmonster.com/UserLogin.aspx");
    driver.manage().window().setSize(new Dimension(0, 0));
    driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

    driver.findElement(By.id("ContentPlaceHolder1_UsernameTextBox")).sendKeys(user);
    driver.findElement(By.id("ContentPlaceHolder1_PasswordTextBox")).sendKeys(password);
    driver.findElement(By.id("ContentPlaceHolder1_LoginButton")).click();

    driver.findElement(By.linkText("Logout"));

    driver.findElement(By.linkText("Projections")).click();

    driver.findElement(By.id("ContentPlaceHolder1_ExportButton")).click();

    try {
      Thread.sleep(5000);
    }
    catch(InterruptedException e) {
      e.printStackTrace();
    }
    driver.quit();

    return true;
  }
}
